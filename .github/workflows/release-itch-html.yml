name: Release WASM (Itchio)

permissions:
  contents: write

on:
  push:
    paths-ignore:
      - ".github/build.yml"
      - ".github/release-**.yml"
      - "**/Makefile.toml"
      - "README.md"
    tags:
      - "*"

env:
  APP_NAME: {{crate_name}}
{% raw %}
jobs:
  ci:
    uses: ./.github/workflows/ci.yml

  build:
    needs: ci
    outputs:
      APP_NAME: ${{env.APP_NAME}}
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3
      - name: Load .env file
        uses: xom9ikk/dotenv@v2
      - uses: dsherret/rust-toolchain-file@v1
      - uses: Swatinem/rust-cache@v2
      - name: Setup | Trunk
        uses: jetli/trunk-action@v0.4.0
        with:
          version: "latest"
      - name: Setup target
        run: rustup target add wasm32-unknown-unknown
      - name: Build | Trunk
        env:
          name: ${{env.APP_NAME}}
        run: |
          cd launchers/wasm
          trunk build --release --public-url /$PUBLIC_URL/

      - name: Setup | Place dist
        run: |
          cd ./launchers/wasm/dist
          sed -i 's#/main-#./main-#g' index.html
          sed -i 's#/wasm_#./wasm_#g' index.html
          find . -type f -exec zip ../../../${{env.APP_NAME}}-wasm32-unknown-unknown.zip {} \;

      - name: Post Build | Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.APP_NAME}}-wasm32-unknown-unknown.zip
          path: ${{env.APP_NAME}}-wasm32-unknown-unknown.zip
{% endraw %}
{% if deploy_itch %}
  upload-itch:
    needs: build_native
    secrets: inherit
    uses: ./.github/workflows/itch.yml
    with:
      author: {{itch_username}}
      name: {{ itch_project_name }}
{% raw %}
      file_name: ${{ needs.build.outputs.APP_NAME }}-wasm32-unknown-unknown.zip
      os: html5
{% endraw %}
{% endif %}
